<launch>
    <arg name="output" default="screen" />
    <arg name="table_view" default="false" /> <!-- New argument for table view -->
    
    <!-- Define arguments for RViz config -->
    <arg if="$(arg table_view)" name="rviz_config" value="$(find mechalino_arena)/rviz/config_table_view.rviz" />
    <arg unless="$(arg table_view)" name="rviz_config" value="$(find mechalino_arena)/rviz/config.rviz" />

    <!-- overhead camera image provider node and viewing -->

    <node pkg="mechalino_arena" type="udpcam2topic.py" name="udpcam2topic" output="$(arg output)">
        <rosparam command="load" file="$(find mechalino_arena)/param/camera_params.yaml" />
    </node>
    
    <!-- RViz node with configured config -->
    <node pkg="rviz" type="rviz" name="rviz" output="$(arg output)" args="-d $(arg rviz_config)" />

    <!-- +++++++++++++++++++++++++++++++++++++++++++++++ -->

    <node pkg="mechalino_arena" type="corners_publisher.py" name="corners_publisher" output="$(arg output)">
        <rosparam command="load" file="$(find mechalino_arena)/param/camera_params.yaml" />
        <rosparam command="load" file="$(find mechalino_arena)/param/aruco_markers_params.yaml" />
    </node>
    <node pkg="mechalino_arena" type="robots_publisher.py" name="robots_publisher" output="$(arg output)">
        <rosparam command="load" file="$(find mechalino_arena)/param/camera_params.yaml" />
        <rosparam command="load" file="$(find mechalino_arena)/param/aruco_markers_params.yaml" />
    </node>

    <!-- +++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- raw table point cloud -->
    <node pkg="mechalino_arena" type="table_pc.py" name="table_pc" output="$(arg output)"/>

    <!-- Publish a fixed transform between camera_frame and table_frame -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_tf_publisher"
          args="0 0 1.42 0 3.141592653589793 0 table camera" />

</launch>
